package com.Bitwise.TimeSheet.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.Bitwise.TimeSheet.exception.ResourceNotFound;
import com.Bitwise.TimeSheet.model.Resource;
import com.Bitwise.TimeSheet.model.TimeSheet;
import com.Bitwise.TimeSheet.model.TotalSum;
import com.Bitwise.TimeSheet.service.TimeSheetService;

@CrossOrigin("*")
@RestController
public class TimesheetController
{
	@Autowired
	TimeSheetService timeSheetService;
	
	@PostMapping("/post")
	public ResponseEntity<Resource> postData(@RequestBody Resource rs)
	{
		return new ResponseEntity<Resource>(timeSheetService.saveData(rs),HttpStatus.CREATED);
		
	}

	@GetMapping("/get")
	
	public ResponseEntity<List<Resource>> getdata()
	{
		if(!timeSheetService.findAll().isEmpty())
		{
	return new ResponseEntity<List<Resource>>(timeSheetService.findAll(),HttpStatus.OK);
	}
		else
		{
			return new ResponseEntity<List<Resource>>(timeSheetService.findAll(),HttpStatus.NO_CONTENT);
		}
		
	}

	@GetMapping("/gettotal")
		public ResponseEntity<List<TotalSum>> gettotaldata()
		{
		return new ResponseEntity<List<TotalSum>>(timeSheetService.findtoatal(),HttpStatus.OK);
		}
	
	
	@PutMapping(value="/update/{resourseId}")
	public ResponseEntity<Resource> update(@PathVariable int resourseId,@RequestBody Resource rs) throws ResourceNotFound
	{
		Resource res=null;
		try
		{
		res=	timeSheetService.updatedata(resourseId,rs);
		}
		catch (Exception e) {
			throw new ResourceNotFound("Resource not available");
		}
		return new ResponseEntity<Resource>(res,HttpStatus.OK);
	}
	

	}  

